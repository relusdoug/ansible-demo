{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "Create the application environment that is controlled by ansible",
    "Metadata": {

    },
    "Parameters": {
        "InstanceTypeParameters": {
            "Type": "String",
            "Default": "t2.nano",
            "AllowedValues": ["t2.micro", "t2.nano"],
            "Description": "The allowable instance types for an ansible controller"
        }
    },
    "Mappings": {

    },
    "Conditions": {

    },
    "Resources": {
        "DemoScalingPolicy": {
            "Type": "AWS::ApplicationAutoScaling::ScalingPolicy",
            "Properties": {
                "PolicyName": "AnsibleAppScale,
                "PolicyType" : String,
                "ResourceId" : String,
                "ScalableDimension" : String,
                "ScalingTargetId" : String,
                "ServiceNamespace" : String,
                "StepScalingPolicyConfiguration" : StepScalingPolicyConfiguration
            }
        },
        "WebELB": {
            "Type": "AWS::ElasticLoadBalancing::LoadBalancer",
            "Properties": {
                "Subnets" : [ String, ... ],
                "CrossZone" : "true",
                "LoadBalancerName" : "AnsibleDemoWebELB",
                "Listeners" : [ { "InstancePort": "80", "InstanceProtocol": "HTTP", "LoadBalancerPort": "80", "Protocol": "HTTP" }],
                "Tags": [
                    {"Key":"Name", "Value":"AnsibleDemoWebELB"},
                    {"Key":"Team", "Value": "Douglas Yoon"}
                ]
            }
        },
        "AppELB": {
            "Type": "AWS::ElasticLoadBalancing::LoadBalancer",
            "Properties": {
                "Subnets" : [ String, ... ],
                "CrossZone" : "true",
                "LoadBalancerName" : "AnsibleDemoWebELB",
                "Listeners" : [ { "InstancePort": "80", "InstanceProtocol": "HTTP", "LoadBalancerPort": "80", "Protocol": "HTTP" }],
                "Tags": [
                    {"Key":"Name", "Value":"AnsibleDemoAppELB"},
                    {"Key":"Team", "Value": "Douglas Yoon"}
                ]
            }
        },
        "DYDemoAppSecurityGroup": {
            "Type":"AWS::EC2::SecurityGroup",
            "Properties": {
                "GroupDescription": "Doug CF SG fo http and ssh",
                "SecurityGroupIngress": [
                    {"IpProtocol": "tcp", "FromPort": "80", "ToPort": "80", "CidrIp": "0.0.0.0/0"},
                    {"IpProtocol": "tcp", "FromPort": "22", "ToPort": "22", "CidrIp": "0.0.0.0/0"}
                ],
                "VpcId": { "Ref": "dougCfVpc" },
                "Tags": [
                    {"Key":"Name", "Value":"DougHTTPandSSH"},
                    {"Key":"Team", "Value": "Douglas Yoon"}
                ]
            }
        },
        "WebLC": {
            "Type": "AWS::AutoScaling::LaunchConfiguration",
            "Properties": {
                "AssociatePublicIpAddress": false,
                "EbsOptimized": false,
                "ImageId": "ami-c55673a0",
                "InstanceType": { "Ref": "InstanceTypeParameters" },
                "KeyName": "DY-Ohio",
                "SecurityGroups": [{ "Ref": "DYDemoAppSecurityGroup" }]
            }
        },
        "AppLC": {
            "Type": "AWS::AutoScaling::LaunchConfiguration",
            "Properties": {
                "AssociatePublicIpAddress": false,
                "EbsOptimized": false,
                "ImageId": "ami-c55673a0",
                "InstanceType": { "Ref": "InstanceTypeParameters" },
                "KeyName": "DY-Ohio",
                "SecurityGroups": [{ "Ref": "DYDemoAppSecurityGroup" }]
            }
        },
        "WebASG: {
            "Type": "AWS::AutoScaling::AutoScalingGroup",
            "Properties": {
                "VPCZoneIdentifier": [ "SubnetID", ... ],
                "Cooldown": "300",
                "HealthCheckGracePeriod": "300",
                "HealthCheckType": "ELB",
                "LaunchConfigurationName": { "Ref": "WebLC" },
                "LoadBalancerNames" : [{ "Ref": "WebELB" }],
                "MaxSize" : "10",
                "MinSize" : "2",
                "Tags": [
                    {"Key":"Name", "Value":"Ansible Demo Web ASG"},
                    {"Key":"Team", "Value": "Douglas Yoon"}
                ]
            }
        },
        "AppASG: {
            "Type": "AWS::AutoScaling::AutoScalingGroup",
            "Properties": {
                "VPCZoneIdentifier": [ "SubnetID", ... ],
                "Cooldown": "300",
                "HealthCheckGracePeriod": "300",
                "HealthCheckType": "ELB",
                "LaunchConfigurationName": { "Ref": "AppLC" },
                "LoadBalancerNames" : [{ "Ref": "AppELB" }],
                "MaxSize" : "10",
                "MinSize" : "2",
                "Tags": [
                    {"Key":"Name", "Value":"Ansible Demo App ASG"},
                    {"Key":"Team", "Value": "Douglas Yoon"}
                ]
            }
        },
        "WebLCHUp": {
            "Type" : "AWS::AutoScaling::LifecycleHook",
            "Properties" : {
                "AutoScalingGroupName" : String,
                "DefaultResult" : String,
                "HeartbeatTimeout" : Integer,
                "LifecycleTransition" : String,
                "NotificationMetadata" : String,
                "NotificationTargetARN" : String,
                "RoleARN" : String
            }
        },
        "WebLCHDown": {
            "Type" : "AWS::AutoScaling::LifecycleHook",
            "Properties" : {
                "AutoScalingGroupName" : String,
                "DefaultResult" : String,
                "HeartbeatTimeout" : Integer,
                "LifecycleTransition" : String,
                "NotificationMetadata" : String,
                "NotificationTargetARN" : String,
                "RoleARN" : String
            }
        },
    },
    "Outputs": {
    }
}

