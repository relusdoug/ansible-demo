{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "Create the application environment that is controlled by ansible",
    "Metadata": {

    },
    "Parameters": {
        "initStackName": { 
            "Type": "String", 
            "Default": "DY-Ansible-Demo" 
        },
        "sqsRole": { 
            "Type": "String", 
            "Default": "arn:aws:iam::515923937946:role/ansibleSQSRole" 
        },
        "InstanceTypeParameters": {
            "Type": "String",
            "Default": "t2.nano",
            "AllowedValues": ["t2.micro", "t2.nano"],
            "Description": "The allowable instance types for an ansible controller"
        }
    },
    "Mappings": {

    },
    "Conditions": {

    },
    "Resources": {
        "DemoSQS": {
            "Type" : "AWS::SQS::Queue",
            "Properties" : {
                "DelaySeconds": "0",
                "QueueName": "DYAnsibleDemoQueue",
                "ReceiveMessageWaitTimeSeconds": "20",
                "VisibilityTimeout": "600"
            }
        },
        "CPUAlarmHigh": {
            "Type": "AWS::CloudWatch::Alarm",
            "Properties": {
                "AlarmDescription": "Scale-up if CPU > 90% for 10 minutes",
                "MetricName": "CPUUtilization",
                "Namespace": "AWS/EC2",
                "Statistic": "Average",
                "Period": "300",
                "EvaluationPeriods": "2",
                "Threshold": "90",
                "AlarmActions": [ { "Ref": "DemoScaleUpPolicy" } ],
                "Dimensions": [{ "Name": "AutoScalingGroupName", "Value": { "Ref": "WebASG" }}],
                "ComparisonOperator": "GreaterThanThreshold"
            }
        },
        "CPUAlarmLow": {
            "Type": "AWS::CloudWatch::Alarm",
            "Properties": {
                "AlarmDescription": "Scale-down if CPU < 70% for 10 minutes",
                "MetricName": "CPUUtilization",
                "Namespace": "AWS/EC2",
                "Statistic": "Average",
                "Period": "300",
                "EvaluationPeriods": "2",
                "Threshold": "70",
                "AlarmActions": [ { "Ref": "DemoScaleDownPolicy" } ],
                "Dimensions": [ { "Name": "AutoScalingGroupName", "Value": { "Ref": "WebASG" }}],
                "ComparisonOperator": "LessThanThreshold"
            }
        },
        "DemoScaleUpPolicy" : {
            "Type" : "AWS::AutoScaling::ScalingPolicy",
            "Properties" : {
                "AdjustmentType" : "ChangeInCapacity",
                "AutoScalingGroupName" : { "Ref" : "WebASG" },
                "Cooldown" : "60",
                "ScalingAdjustment" : "2"
            }
        },
        "DemoScaleDownPolicy" : {
            "Type" : "AWS::AutoScaling::ScalingPolicy",
            "Properties" : {
                "AdjustmentType" : "ChangeInCapacity",
                "AutoScalingGroupName" : { "Ref" : "WebASG" },
                "Cooldown" : "60",
                "ScalingAdjustment" : "-2"
            }
        },
        "WebELB": {
            "Type": "AWS::ElasticLoadBalancing::LoadBalancer",
            "Properties": {
                "Subnets" : [ 
                    {"Fn::ImportValue" : {"Fn::Sub" : "${initStackName}-public01"}}, 
                    {"Fn::ImportValue" : {"Fn::Sub" : "${initStackName}-public02"}}
                ],
                "CrossZone" : "true",
                "LoadBalancerName" : "AnsibleDemoWebELB",
                "Listeners" : [ { "InstancePort": "80", "InstanceProtocol": "HTTP", "LoadBalancerPort": "80", "Protocol": "HTTP" }],
                "Tags": [
                    {"Key":"Name", "Value": "AnsibleDemoWebELB"},
                    {"Key":"Team", "Value": "Douglas Yoon"}
                ]
            }
        },
        "AppELB": {
            "Type": "AWS::ElasticLoadBalancing::LoadBalancer",
            "Properties": {
                "Subnets" : [ 
                    {"Fn::ImportValue" : {"Fn::Sub" : "${initStackName}-private01"}}, 
                    {"Fn::ImportValue" : {"Fn::Sub" : "${initStackName}-private02"}}
                ],
                "CrossZone" : "true",
                "LoadBalancerName" : "AnsibleDemoAppELB",
                "Listeners" : [ { "InstancePort": "80", "InstanceProtocol": "HTTP", "LoadBalancerPort": "80", "Protocol": "HTTP" }],
                "Tags": [
                    {"Key":"Name", "Value": "AnsibleDemoAppELB"},
                    {"Key":"Team", "Value": "Douglas Yoon"}
                ]
            }
        },
        "DYDemoAppSecurityGroup": {
            "Type":"AWS::EC2::SecurityGroup",
            "Properties": {
                "GroupDescription": "Doug CF SG fo http and ssh",
                "SecurityGroupIngress": [
                    {"IpProtocol": "tcp", "FromPort": "80", "ToPort": "80", "CidrIp": "0.0.0.0/0"},
                    {"IpProtocol": "tcp", "FromPort": "22", "ToPort": "22", "CidrIp": "0.0.0.0/0"}
                ],
                "VpcId": {"Fn::ImportValue" : {"Fn::Sub" : "${initStackName}-vpc"}}, 
                "Tags": [
                    {"Key":"Name", "Value": "DougHTTPandSSH"},
                    {"Key":"Team", "Value": "Douglas Yoon"}
                ]
            }
        },
        "WebLC": {
            "Type": "AWS::AutoScaling::LaunchConfiguration",
            "Properties": {
                "AssociatePublicIpAddress": false,
                "EbsOptimized": false,
                "ImageId": "ami-c55673a0",
                "InstanceType": { "Ref": "InstanceTypeParameters" },
                "KeyName": "DY-Ohio",
                "SecurityGroups": [{ "Ref": "DYDemoAppSecurityGroup" }]
            }
        },
        "AppLC": {
            "Type": "AWS::AutoScaling::LaunchConfiguration",
            "Properties": {
                "AssociatePublicIpAddress": false,
                "EbsOptimized": false,
                "ImageId": "ami-c55673a0",
                "InstanceType": { "Ref": "InstanceTypeParameters" },
                "KeyName": "DY-Ohio",
                "SecurityGroups": [{ "Ref": "DYDemoAppSecurityGroup" }]
            }
        },
        "WebASG": {
            "Type": "AWS::AutoScaling::AutoScalingGroup",
            "Properties": {
                "VPCZoneIdentifier": [
                    {"Fn::ImportValue" : {"Fn::Sub" : "${initStackName}-public01"}}, 
                    {"Fn::ImportValue" : {"Fn::Sub" : "${initStackName}-public02"}}
                ],
                "Cooldown": "300",
                "HealthCheckGracePeriod": "300",
                "HealthCheckType": "ELB",
                "LaunchConfigurationName": { "Ref": "WebLC" },
                "LoadBalancerNames" : [{ "Ref": "WebELB" }],
                "MaxSize" : "10",
                "MinSize" : "2",
                "Tags": [
                    {"Key":"Name", "Value": "Ansible Demo Web ASG", "PropagateAtLaunch": "true" },
                    {"Key":"Team", "Value": "Douglas Yoon", "PropagateAtLaunch": "true" }
                ]
            }
        },
        "AppASG": {
            "Type": "AWS::AutoScaling::AutoScalingGroup",
            "Properties": {
                "VPCZoneIdentifier": [
                    {"Fn::ImportValue" : {"Fn::Sub" : "${initStackName}-private01"}}, 
                    {"Fn::ImportValue" : {"Fn::Sub" : "${initStackName}-private02"}}
                ],
                "Cooldown": "300",
                "HealthCheckGracePeriod": "300",
                "HealthCheckType": "ELB",
                "LaunchConfigurationName": { "Ref": "AppLC" },
                "LoadBalancerNames" : [{ "Ref": "AppELB" }],
                "MaxSize" : "10",
                "MinSize" : "2",
                "Tags": [ 
                    {"Key":"Name", "Value": "Ansible Demo App ASG", "PropagateAtLaunch": "true" },
                    {"Key":"Team", "Value": "Douglas Yoon", "PropagateAtLaunch": "true" }
                ]
            }
        },
        "WebLCHUp": {
            "Type" : "AWS::AutoScaling::LifecycleHook",
            "Properties" : {
                "AutoScalingGroupName" : { "Ref": "WebASG" },
                "HeartbeatTimeout": "300",
                "LifecycleTransition" : "autoscaling:EC2_INSTANCE_LAUNCHING",
                "NotificationMetadata" : "AnsibleDemoWebUpASGEvent",
                "NotificationTargetARN" : { "Fn::GetAtt" : ["DemoSQS", "Arn"]},
                "RoleARN" : { "Ref": "sqsRole" }
            }
        },
        "WebLCHDown": {
            "Type" : "AWS::AutoScaling::LifecycleHook",
            "Properties" : {
                "AutoScalingGroupName" : { "Ref": "WebASG" },
                "HeartbeatTimeout": "300",
                "LifecycleTransition" : "autoscaling:EC2_INSTANCE_TERMINATING",
                "NotificationMetadata" : "AnsibleDemoWebDownASGEvent",
                "NotificationTargetARN" : { "Fn::GetAtt" : ["DemoSQS", "Arn"]},
                "RoleARN" : { "Ref": "sqsRole" }
            }
        }
    },
    "Outputs": {
        "outSQSURL": {
            "Description": "Ansible Demo SQS URL",
            "Value": { "Ref": "DemoSQS" },
            "Export": {
                "Name" : {"Fn::Sub": "${AWS::StackName}-sqsURL" }
            }
        }
    }
}

